{"version":3,"sources":["file:///A:/code/poly/code/Polyomines/assets/script/Game_Board.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","Vec3","ccclass","property","Game_Board","show_grids","grid_size","origin_pos_x","origin_pos_z","step_z","region_size","step_x","pos_x","half_region_size","x","width","pos_z","y","height","region","board_region_prefab","setParent","regions","setPosition","square_size"],"mappings":";;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAA2BC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAoBC,MAAAA,I,OAAAA,I;;;;;;;;;OAE9E;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBP,U;;4BAGfQ,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACH,MAAD,C,sCAHX,MACaI,UADb,SACgCP,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAOjCQ,QAAAA,UAAU,CAACC,SAAD,EAAkB;AACjC,cAAIC,YAAY,GAAG,CAAnB;AACA,cAAIC,YAAY,GAAG,CAAnB;AAEA,cAAIC,MAAM,GAAGL,UAAU,CAACM,WAAxB;AACA,cAAIC,MAAM,GAAGP,UAAU,CAACM,WAAxB;AACA,cAAIE,KAAK,GAAGL,YAAY,GAAGH,UAAU,CAACS,gBAAtC;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,KAA9B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,gBAAIE,KAAK,GAAGR,YAAY,GAAGJ,UAAU,CAACS,gBAAtC;;AAEA,iBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,SAAS,CAACY,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,kBAAIE,MAAY,GAAGrB,WAAW,CAAC,KAAKsB,mBAAN,CAA9B;AACAD,cAAAA,MAAM,CAACE,SAAP,CAAiB,KAAKC,OAAtB;AACAH,cAAAA,MAAM,CAACI,WAAP,CAAmB,IAAItB,IAAJ,CAASW,KAAT,EAAgB,CAAhB,EAAmBI,KAAnB,CAAnB;AAEAA,cAAAA,KAAK,IAAIP,MAAT;AACD;;AAEDG,YAAAA,KAAK,IAAID,MAAT;AACD;AACF;;AA5BuC,O,UAIjCD,W,GAAc,E,UACdG,gB,GAAmB,C,UACnBW,W,GAAc,C","sourcesContent":["import {_decorator, Component, instantiate, MeshRenderer, Node, Prefab, Size, Vec2, Vec3} from 'cc';\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('Game_Board')\r\nexport class Game_Board extends Component {\r\n  @property(Node) regions: Node;\r\n  @property(Prefab) board_region_prefab: Prefab;\r\n\r\n  static region_size = 10;\r\n  static half_region_size = 5;\r\n  static square_size = 1;\r\n  public show_grids(grid_size: Size) {\r\n    let origin_pos_x = 0;\r\n    let origin_pos_z = 0;\r\n\r\n    let step_z = Game_Board.region_size;\r\n    let step_x = Game_Board.region_size;\r\n    let pos_x = origin_pos_x + Game_Board.half_region_size;\r\n\r\n    for (let x = 0; x < grid_size.width; x++) {\r\n      let pos_z = origin_pos_z + Game_Board.half_region_size;\r\n\r\n      for (let y = 0; y < grid_size.height; y++) {\r\n        let region: Node = instantiate(this.board_region_prefab);\r\n        region.setParent(this.regions);\r\n        region.setPosition(new Vec3(pos_x, 0, pos_z));\r\n\r\n        pos_z += step_z;\r\n      }\r\n\r\n      pos_x += step_x;\r\n    }\r\n  }\r\n}\r\n"]}