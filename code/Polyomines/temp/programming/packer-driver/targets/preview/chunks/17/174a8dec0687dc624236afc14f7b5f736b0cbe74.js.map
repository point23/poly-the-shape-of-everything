{"version":3,"sources":["file:///A:/code/poly/code/Polyomines/assets/script/Game_Board.ts"],"names":["_decorator","Component","instantiate","Node","Prefab","Vec3","ccclass","property","Game_Board","show_grids","grid_size","origin_pos","origin","position","console","log","origin_pos_x","x","origin_pos_z","z","pos_z","step_z","step_x","width","pos_x","half_region_size","y","height","region","board_region_prefab","setParent","regions","setPosition","showGrid","region_size","square_size"],"mappings":";;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAA2BC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAoBC,MAAAA,I,OAAAA,I;;;;;;;;;OAE9E;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBP,U;;4BAGfQ,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACH,MAAD,C,sCAJX,MACaI,UADb,SACgCP,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQjCQ,QAAAA,UAAU,CAACC,SAAD,EAAkB;AACjC,cAAIC,UAAU,GAAG,KAAKC,MAAL,CAAYC,QAA7B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,cAAIK,YAAY,GAAG,KAAKJ,MAAL,CAAYC,QAAZ,CAAqBI,CAAxC;AACA,cAAIC,YAAY,GAAG,KAAKN,MAAL,CAAYC,QAAZ,CAAqBM,CAAxC;AAEA,cAAIC,KAAK,GAAG,CAAZ;AACA,cAAIC,MAAM,GAAG,CAAb;AACA,cAAIC,MAAM,GAAG,CAAb;;AAEA,eAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAAS,CAACa,KAA9B,EAAqCN,CAAC,EAAtC,EAA0C;AACxC,gBAAIO,KAAK,GAAGR,YAAY,GAAGR,UAAU,CAACiB,gBAAtC;;AAEA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,SAAS,CAACiB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,kBAAIE,MAAY,GAAG1B,WAAW,CAAC,KAAK2B,mBAAN,CAA9B;AACAD,cAAAA,MAAM,CAACE,SAAP,CAAiB,KAAKC,OAAtB;AACAH,cAAAA,MAAM,CAACI,WAAP,CAAmB,IAAI3B,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAnB;AAEAe,cAAAA,KAAK,IAAIC,MAAT;AACD;;AAEDG,YAAAA,KAAK,IAAIF,MAAT;AACD;AACF;;AAEMW,QAAAA,QAAQ,GAAG,CAAE;;AAlCoB,O,UAKjCC,W,GAAc,E,UACdT,gB,GAAmB,C,UACnBU,W,GAAc,C","sourcesContent":["import {_decorator, Component, instantiate, MeshRenderer, Node, Prefab, Size, Vec2, Vec3} from 'cc';\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('Game_Board')\r\nexport class Game_Board extends Component {\r\n  @property(Node) origin: Node;\r\n  @property(Node) regions: Node;\r\n  @property(Prefab) board_region_prefab: Prefab;\r\n\r\n  static region_size = 10;\r\n  static half_region_size = 5;\r\n  static square_size = 1;\r\n  public show_grids(grid_size: Size) {\r\n    let origin_pos = this.origin.position;\r\n    console.log(origin_pos);\r\n\r\n    let origin_pos_x = this.origin.position.x;\r\n    let origin_pos_z = this.origin.position.z;\r\n\r\n    let pos_z = 0;\r\n    let step_z = 0;\r\n    let step_x = 0;\r\n\r\n    for (let x = 0; x < grid_size.width; x++) {\r\n      let pos_x = origin_pos_x + Game_Board.half_region_size;\r\n\r\n      for (let y = 0; y < grid_size.height; y++) {\r\n        let region: Node = instantiate(this.board_region_prefab);\r\n        region.setParent(this.regions);\r\n        region.setPosition(new Vec3(0, 0, 0));\r\n\r\n        pos_z += step_z;\r\n      }\r\n\r\n      pos_x += step_x;\r\n    }\r\n  }\r\n\r\n  public showGrid() {}\r\n}\r\n"]}