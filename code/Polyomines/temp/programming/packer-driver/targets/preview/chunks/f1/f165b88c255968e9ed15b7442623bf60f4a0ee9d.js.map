{"version":3,"sources":["file:///A:/code/poly/code/Polyomines/assets/script/Swipe_Camera.ts"],"names":["_decorator","Component","input","Input","KeyCode","Node","Quat","Vec3","ccclass","property","Swipe_Camera","onLoad","register_event","onDestroy","unregister_event","on","EventType","KEY_DOWN","on_key_down","off","event","key_code","keyCode","KEY_W","update_position","KEY_S","KEY_A","KEY_D","KEY_Q","KEY_E","update_view","info","position","camera_base","setPosition","x","y","z","rotation","out","setRotation","w","delta","add","update_rotation"],"mappings":"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","sourcesContent":["import {_decorator, Component, EventKeyboard, input, Input, KeyCode, Node, Overflow, Quat, Vec3} from 'cc';\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\ntype Camera_Info = {\r\n  position: {x: number, y: number, z: number};\r\n  rotation: {x: number, y: number, z: number, w: number};\r\n};\r\n\r\n@ccclass('Swipe_Camera')\r\nexport class Swipe_Camera extends Component {\r\n  @property(Node) camera_base: Node;\r\n\r\n  onLoad() {\r\n    this.register_event();\r\n  }\r\n\r\n  onDestroy() {\r\n    this.unregister_event();\r\n  }\r\n\r\n  register_event() {\r\n    input.on(Input.EventType.KEY_DOWN, this.on_key_down, this);\r\n  }\r\n\r\n  unregister_event() {\r\n    input.off(Input.EventType.KEY_DOWN, this.on_key_down, this);\r\n  }\r\n\r\n  on_key_down(event: EventKeyboard) {\r\n    let key_code = event.keyCode;\r\n\r\n    switch (key_code) {\r\n      case KeyCode.KEY_W:\r\n        this.update_position(new Vec3(0, 1, 0));\r\n        break;\r\n      case KeyCode.KEY_S:\r\n        this.update_position(new Vec3(0, -1, 0));\r\n        break;\r\n      case KeyCode.KEY_A:\r\n        this.update_position(new Vec3(0, 0, -1));\r\n        break;\r\n      case KeyCode.KEY_D:\r\n        this.update_position(new Vec3(0, 0, 1));\r\n        break;\r\n      case KeyCode.KEY_Q:\r\n        this.update_position(new Vec3(1, 0, 0));\r\n        break;\r\n      case KeyCode.KEY_E:\r\n        this.update_position(new Vec3(-1, 0, 0));\r\n        break;\r\n    }\r\n  }\r\n\r\n  update_view(info: Camera_Info) {\r\n    if (info.position) {\r\n      this.camera_base.setPosition(\r\n          new Vec3(info.position.x, info.position.y, info.position.z));\r\n    }\r\n\r\n    if (info.rotation) {\r\n      let out: any;\r\n      this.camera_base.setRotation(new Quat(\r\n          info.rotation.x, info.rotation.y, info.rotation.z, info.rotation.w));\r\n    }\r\n  }\r\n\r\n  update_position(delta: Vec3) {\r\n    this.camera_base.setPosition(this.camera_base.position.add(delta));\r\n  }\r\n\r\n  update_rotation(rotation: Quat) {\r\n    this.camera_base.setRotation(rotation);\r\n  }\r\n}\r\n"]}