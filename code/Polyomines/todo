@Todo ###
LEVEL EDITOR ===
- Load and Save Camera
- Load and Save Level
- Switch Mode <= State Pattern
- Entity Copy, Paste, Delete
- Validation
- Get rid of singletons
- Diff entities
- Do undo
- Serialize undo

UI ===
- button group
- navigator
- transactions panel
- undo panel
- Stars for difficulty
- Fade in and Fade out
- Typer
- Click any place to start
- Settings
+ Different Background Color
+ Clock and Slide for undo
+ !!! Auto Fit for Multi-Resolution
+ !!! Guide
+ !!! Click to enter the target room

GAMEPLAY === 
- Polyominoes
- Moves and Transactions
- Character Control
    CONTROLLER_PROC_MOVE: rotate + move
- Supporter and Supportee
- Proximity grid
- Falling
- Assign difficulty of current level
- Fence: 
    Blocked Behavior
    Example:
        _______
       |      ||
       | -x-> || <-x-
       |______||
- Rover
- Reset the whole level when
    * We press 'R'
    * We switch the mode in level editor
- Switch
- Power(GEM)
- Sanity check
- Buffered game inputs
    Virtual Controller
    Keyboard
    Touch Panel
- Let the Rover drop down!
- Hints
- Fix Input...
- Active Hero as an flag... 
- Different Types of Checkpoints: HERO || ARTIFACTS?
- !!! Stop all of the interpolations when doing undo, it is visually wrong.
- !!! Visual_Interpolation class, tick related update
+ PRE and POST messages
+ ARTIFACTS
+ Decorators
    Like grass on the ground.
    Same solution as Hints.
+ Fog of wars
+ Map
+ Better camera controller
    Fallow character
+ Capee / POCCESS MOVE
+ Ocean
+ River
+ Elevator

AI STUFF ===
+ What about monsters? how they react?
+ Character model of monsters

ART STUFF===
- More realistic rocks
- Beam vfx made with Particle-System
    + Glowing vfx for checkpoint
    + Glowing vfx for switch turn on/off
    + Shining gems
- Animation
+ Animation State Mechine
+ Plants
+ Wavelets
+ Look through occluding objects if there's a hero or special items like switch or gem
    - 2 shaders, one with ZTEST GEqual
+ New version of animation api...

AUDIO STUFF===
- Main Theme
- Basic SFX: Move, Push, Rover
+ New version of audio api...

@Deprecated ###
- Redo & Undo <= Command Pattern
- Entity Type: Channel
- Schedule Game Loops by Scheduler

@Fixme ### 
- ISSUE#001: 2d local position is limited
    change it from 2d to 3d
- ISSUE#002: Sth wrong with double-click:
    fire a scheduler to disable it after a very short interval.
- ISSUE#003: Failed to move onto entities just created in the editor...
- ISSUE#004: When 2 rover moves in different direction, and there's a entity in between, one of them would keep moving and stop at the same pos that entity locate.
- Fix undo redo
- Clean up undo
- ISSUE#006: When we push a rock, it falls to a wrong pos, if the rover is moved at the same time
- ISSUE#005: When we push a rock in the same round that rover is moved, them would be in the same square
- ISSUE#007: When we push sth, its supportee should be blocked by others and drop down
- ISSUE#008: When we push sth, its supportee may drop on a comming entity
- ISSUE#009: When we move gem onto switch in edit mode,
     then enter test run, then immediatly reload, it crashes caused by sth related to 'pending_win'.
- Clear transaction stack when load new levels
- Repeatedly bind the schedule function!!!
    just unschedule it when exit
- ISSUE#010: Supporting Stack!!!
    Boards are the FIRST CLASS supporter and supportee
    Boards should have at least one non-board supporter
    If supportee has other suppoter, it should not be moved.
- ISSUE#011: Rover need state
    After redo action, rover will recalculate it's next direction depends on track and its orientation
    Rover move is generated relies on this val [Game Round Id % Rover Speed], but since we didn't rewind the Round Id,
        it introduced a lot of inconsistencies. We can't reenact some behavior after undo, which is horrifying.
    Since gameplay timer is flip to 0 when count to 1 << 8, 2 rover move will be generate at 2 neighber rounds, each rover should has its own couter!!!
- ISSUE#012: Undo -> Rewind
    When user keep pressing undo button, the gamecode should keep rewind, instead of undo once and start to generate
    rover moves immediatly... 
- ISSUE#013: Zigzag Supportees
    For those whom are supported by as Domino, the world y position can not simply calcu by Support.position + Direction2Vec3[ Direction.Up ].
+ ISSUE#014: Schrodinger's Hints Item
    When we entered edit mode - test it - switch to another level - switch back...
    Hints items ganna shown up at a wierd position. 
- ISSUE#015: Time Operator
    There're many weird stuff caused by the Gameplay_Timer -
        when we do visual interpolation with tween system, it's hard to get the rover moving consistently since the tween duration is calculated wrong!!!
    There're 2 possible solvement to this:
        1. Gameplay_Timer.get_gameplay_time returns a Vec2()
            x -> tick_idx;
            y -> round_idx;
            So we can get a more detailed info about exactly how long should we move.
        2. Make the interpolation system on our own.
- ISSUE#016: Undo Mistake...
    We need to pick anothr place to undo that end frame
- ISSUE#017: Pacing
    Rover is slower, visually.
    When it's start to move, we still think that we can run to that square.
    Which destroy the system, since we don't detect mistakes in fly.
- ISSUE#018: RECTORING MOVEMENT SYSTEM!!!
    What do we want?
        1. Catch up & Jumped the gun?
+ ISSUE#019: LERPING QUATS
    ???
+ ISSUE#020: Wrong Supporting Moves Generated with poly type is Domino...

@Optimize ###
+ Draw-Call is too high